---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: vaultwarden
  name: vaultwarden
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vaultwarden-storage
  namespace: vaultwarden
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: vaultwarden-db-cluster
  namespace: vaultwarden
spec:
  instances: 2
  bootstrap:
    initdb:
      database: vaultwarden
      owner: vaultwarden-db-user
  storage:
    storageClass: longhorn-single-local
    size: 2Gi
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: pushsecret-vaultwarden-db
  namespace: vaultwarden
spec:
  refreshInterval: 48h
  secretStoreRefs:
    - name: bitwarden-secrets-manager
      kind: ClusterSecretStore
  selector:
    secret:
      name: vaultwarden-db-cluster-app
  data:
    - match:
        secretKey: uri
        remoteRef:
          remoteKey: vaultwarden-db-cluster-app/uri
      metadata:
        note: "Vaultwarden PostgreSQL DB uri, with user and password."
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: vaultwarden-secrets
  namespace: vaultwarden
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: bitwarden-secrets-manager
    kind: ClusterSecretStore
  data:
  - secretKey: admin-pass
    remoteRef:
      key: "vaultwarden-secrets/admin-pass"
  - secretKey: smtp-user
    remoteRef:
      key: "vaultwarden-secrets/smtp-user"
  - secretKey: smtp-pass
    remoteRef:
      key: "vaultwarden-secrets/smtp-pass"
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: vaultwarden
  namespace: flux-system
spec:
  interval: 1h
  url: https://guerzon.github.io/vaultwarden
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: flux-system
spec:
  interval: 1h
  targetNamespace: vaultwarden
  chart:
    spec:
      chart: vaultwarden
      version: 0.32.1
      sourceRef:
        kind: HelmRepository
        name: vaultwarden
        namespace: flux-system
      interval: 1h
  values:
    image:
      registry: ghcr.io
      repository: dani-garcia/vaultwarden
      tag: "1.34.1-alpine"
    replicas: 1
    storage:
      existingVolumeClaim:
        claimName: "vaultwarden-storage"
        dataPath: "/data"
        attachmentsPath: /data/attachments
    database:
      type: "postgresql"
      existingSecret: "vaultwarden-db-cluster-app"
      existingSecretKey: "uri"
      connectionRetries: 15
      maxConnections: 10
    emergencyNotifReminderSched: "0 3 * * * *"
    emergencyRqstTimeoutSched: "0 7 * * * *"
    eventCleanupSched: "0 10 0 * * *"
    domain: "https://vaultwarden.imnotaserver.xyz"
    sendsAllowed: "true"
    hibpApiKey: ""
    signupsAllowed: false
    invitationsAllowed: false
    emailChangeAllowed: "true"
    showPassHint: "false"
    ipHeader: "X-Forwarded-For"
    iconService: "internal"
    requireDeviceEmail: "false"
    extendedLogging: "true"
    adminToken:
      existingSecret: "vaultwarden-secrets"
      existingSecretKey: "admin-pass"
    timeZone: "America/Argentina/Buenos_Aires"
    orgGroupsEnabled: "false"
    smtp:
      existingSecret: "vaultwarden-secrets"
      host: "smtp-relay.brevo.com"
      security: "starttls"
      port: 587
      from: "admin@vaultwarden.imnotaserver.xyz"
      fromName: "Vaultwarden Admin"
      username:
        existingSecretKey: "smtp-user"
      password:
        existingSecretKey: "smtp-pass"
      authMechanism: "Login"
      acceptInvalidHostnames: "false"
      acceptInvalidCerts: "false"
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: vaultwarden-ui
  namespace: vaultwarden
spec:
  parentRefs:
  - name: metal-gateway
    namespace: gateways
    sectionName: imnotaserver.xyz-https
  hostnames:
  - "vaultwarden.imnotaserver.xyz"
  rules:
  - backendRefs:
    - name: vaultwarden-vaultwarden
      port: 80
